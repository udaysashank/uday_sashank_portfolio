{
  "hash": "fe364f547f66d62227137bc62a256542",
  "result": {
    "markdown": "---\ntitle: \"TidyTuesday: Retail Sales data analysis with Plotly in R\"\ndate: 01-2-2023 \nauthor: Uday Asshank \ncategories: [code, analysis, visualization, plotly]\nimage: \"b.jpg\"\n---\n\n\nIn this TidyTuesday analysis, I explored retail sales data using R and leveraged the power of Plotly for interactive visualizations. The dataset, likely sourced from the TidyTuesday project, was loaded and examined to gain insights into retail trends. Plotly, a dynamic plotting library, was employed to create engaging and interactive charts, allowing for a deeper understanding of sales patterns, seasonality, or any trends within the retail sector. This approach not only facilitates exploration but also enhances the communicative aspect of data findings through visually appealing and interactive plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'plotly' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plotly'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n:::\n\n```{.r .cell-code}\nlibrary(gplots)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gplots' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'gplots'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    lowess\n```\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'caret' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomForest' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nrandomForest 4.7-1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nType rfNews() to see new features/changes/bug fixes.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'randomForest'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    margin\n```\n:::\n\n```{.r .cell-code}\nlibrary(e1071)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'e1071' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\n# Load the Walmart data\nWalmart <- read.csv(\"C:/Users/HP/Downloads/Walmart.csv\")\n\n# Data Cleanup\n# Convert Date column to Date format\nWalmart$Date <- as.Date(Walmart$Date)\n\n# Feature Engineering\n# Extract Year, Month, and Day from Date\nWalmart$Year <- format(Walmart$Date, \"%Y\")\nWalmart$Month <- format(Walmart$Date, \"%m\")\nWalmart$Day <- format(Walmart$Date, \"%d\")\n\n# Exploratory Data Analysis (EDA)\n\n# Display the first few rows of the dataset\nhead(Walmart)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Store       Date Weekly_Sales Holiday_Flag Temperature Fuel_Price      CPI\n1     1 0005-02-20      1643691            0       42.31      2.572 211.0964\n2     1 0012-02-20      1641957            1       38.51      2.548 211.2422\n3     1 0019-02-20      1611968            0       39.93      2.514 211.2891\n4     1 0026-02-20      1409728            0       46.63      2.561 211.3196\n5     1 0005-03-20      1554807            0       46.50      2.625 211.3501\n6     1 0012-03-20      1439542            0       57.79      2.667 211.3806\n  Unemployment Year Month Day\n1        8.106 0005    02  20\n2        8.106 0012    02  20\n3        8.106 0019    02  20\n4        8.106 0026    02  20\n5        8.106 0005    03  20\n6        8.106 0012    03  20\n```\n:::\n\n```{.r .cell-code}\n# Summary statistics\nsummary(Walmart)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Store         Date             Weekly_Sales      Holiday_Flag    \n Min.   : 1   Min.   :0001-04-20   Min.   : 209986   Min.   :0.00000  \n 1st Qu.:12   1st Qu.:0008-07-20   1st Qu.: 553350   1st Qu.:0.00000  \n Median :23   Median :0016-04-20   Median : 960746   Median :0.00000  \n Mean   :23   Mean   :0016-03-07   Mean   :1046965   Mean   :0.06993  \n 3rd Qu.:34   3rd Qu.:0023-12-20   3rd Qu.:1420159   3rd Qu.:0.00000  \n Max.   :45   Max.   :0031-12-20   Max.   :3818686   Max.   :1.00000  \n  Temperature       Fuel_Price         CPI         Unemployment   \n Min.   : -2.06   Min.   :2.472   Min.   :126.1   Min.   : 3.879  \n 1st Qu.: 47.46   1st Qu.:2.933   1st Qu.:131.7   1st Qu.: 6.891  \n Median : 62.67   Median :3.445   Median :182.6   Median : 7.874  \n Mean   : 60.66   Mean   :3.359   Mean   :171.6   Mean   : 7.999  \n 3rd Qu.: 74.94   3rd Qu.:3.735   3rd Qu.:212.7   3rd Qu.: 8.622  \n Max.   :100.14   Max.   :4.468   Max.   :227.2   Max.   :14.313  \n     Year              Month               Day           \n Length:6435        Length:6435        Length:6435       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n```\n:::\n\n```{.r .cell-code}\n# Distribution plot for Weekly Sales\nggplot(Walmart, aes(x = Weekly_Sales)) +\n  geom_histogram(binwidth = 5000, fill = \"#4CAF50\", color = \"#2E7D32\", alpha = 0.7) +\n  labs(title = \"Distribution of Weekly Sales\",\n       x = \"Weekly Sales\", y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Boxplot for Weekly Sales by Store\nggplot(Walmart, aes(x = Store, y = Weekly_Sales)) +\n  geom_boxplot(fill = \"#FF4081\", alpha = 0.7) +\n  labs(title = \"Boxplot of Weekly Sales by Store\",\n       x = \"Store\", y = \"Weekly Sales\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Continuous x aesthetic\nâ„¹ did you forget `aes(group = ...)`?\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Scatter plot for Weekly Sales and Temperature\nggplot(Walmart, aes(x = Temperature, y = Weekly_Sales)) +\n  geom_point(color = \"#1976D2\", alpha = 0.7) +\n  labs(title = \"Scatter Plot of Weekly Sales vs Temperature\",\n       x = \"Temperature\", y = \"Weekly Sales\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Quartile plot\nquartile_data <- Walmart %>%\n  group_by(Date) %>%\n  summarise(Q1 = quantile(Weekly_Sales, 0.25),\n            Q3 = quantile(Weekly_Sales, 0.75))\n\nggplot(quartile_data, aes(x = Date)) +\n  geom_line(aes(y = Q1), color = \"#673AB7\", linetype = \"dashed\") +\n  geom_line(aes(y = Q3), color = \"#673AB7\", linetype = \"dashed\") +\n  labs(title = \"Quartile Sales Over Time\",\n       x = \"Date\", y = \"Weekly Sales\",\n       color = \"Quartile\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Model Evaluation\n# Split the data into training and testing sets\nset.seed(123)\ntrain_indices <- createDataPartition(Walmart$Weekly_Sales, p = 0.7, list = FALSE)\ntrainData <- Walmart[train_indices, ]\ntestData <- Walmart[-train_indices, ]\n\n# Evaluate the linear regression model\nlm_model <- lm(Weekly_Sales ~ Temperature + Fuel_Price + CPI + Unemployment + Holiday_Flag, data = trainData)\nlm_predictions <- predict(lm_model, newdata = testData)\nlm_r2 <- cor(lm_predictions, testData$Weekly_Sales)^2\nlm_rmse <- sqrt(mean((lm_predictions - testData$Weekly_Sales)^2))\n\n# Evaluate the random forest model\nrf_model <- randomForest(Weekly_Sales ~ Temperature + Fuel_Price + CPI + Unemployment + Holiday_Flag, data = trainData)\nrf_predictions <- predict(rf_model, newdata = testData)\nrf_r2 <- cor(rf_predictions, testData$Weekly_Sales)^2\nrf_rmse <- sqrt(mean((rf_predictions - testData$Weekly_Sales)^2))\n\ncat(\"Linear Regression Model:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear Regression Model:\n```\n:::\n\n```{.r .cell-code}\ncat(\"R-squared:\", lm_r2, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR-squared: 0.0154542 \n```\n:::\n\n```{.r .cell-code}\ncat(\"RMSE:\", lm_rmse, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRMSE: 553801.7 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Random Forest Model:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRandom Forest Model:\n```\n:::\n\n```{.r .cell-code}\ncat(\"R-squared:\", rf_r2, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR-squared: 0.140237 \n```\n:::\n\n```{.r .cell-code}\ncat(\"RMSE:\", rf_rmse, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRMSE: 521092.6 \n```\n:::\n:::\n\n\nThe linear regression model achieved a relatively low R-squared value of 0.0155, indicating that the model explains only a small proportion of the variance in the weekly sales. Additionally, the Root Mean Squared Error (RMSE) of 553,801.7 suggests a significant deviation between the predicted and actual sales values, emphasizing the limitations of the linear model in capturing the underlying patterns in the data.\n\nOn the other hand, the Random Forest model exhibited better performance with a higher R-squared value of 0.1402, signifying a greater ability to explain variability in weekly sales. The lower RMSE of 521,092.6 further supports the Random Forest model as a more accurate predictor compared to the linear regression model. This suggests that the Random Forest algorithm, which leverages ensemble learning and decision trees, provides a more robust and flexible approach for capturing the complex relationships within the Walmart sales data set.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}