{
  "hash": "ee5972f050b2a0eeb42684b87ab00d6f",
  "result": {
    "markdown": "---\ntitle: \"Exploratory data analysis and machine learning on Iris dataset\"\nauthor: \"Navya reddy\"\ndate: \"2023-12-06\"\ncategories: [news, code, analysis,plotly,plot]\nimage: \"b.jpg\"\n---\n\n\n***The script loads and explores the Iris dataset, visualizing features like sepal length and petal dimensions. It then implements a decision tree model, assesses its accuracy on a test set, and presents a confusion matrix. The script provides insights through EDA and demonstrates a basic machine learning approach for species classification in the Iris dataset.***\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming IRSI_data is your dataset\n# You need to replace it with the actual name of your dataset\n\n# Load necessary libraries\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\n# Load your IRSI data (replace \"your_dataset.csv\" with your actual dataset file)\nIRSI_data <- read.csv(\"C:/Users/HP/Downloads/Iris.csv\")\n\n# Display the first few rows of the dataset\nhead(IRSI_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Id SepalLengthCm SepalWidthCm PetalLengthCm PetalWidthCm     Species\n1  1           5.1          3.5           1.4          0.2 Iris-setosa\n2  2           4.9          3.0           1.4          0.2 Iris-setosa\n3  3           4.7          3.2           1.3          0.2 Iris-setosa\n4  4           4.6          3.1           1.5          0.2 Iris-setosa\n5  5           5.0          3.6           1.4          0.2 Iris-setosa\n6  6           5.4          3.9           1.7          0.4 Iris-setosa\n```\n:::\n\n```{.r .cell-code}\n# Summary statistics\nsummary(IRSI_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Id         SepalLengthCm    SepalWidthCm   PetalLengthCm  \n Min.   :  1.00   Min.   :4.300   Min.   :2.000   Min.   :1.000  \n 1st Qu.: 38.25   1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600  \n Median : 75.50   Median :5.800   Median :3.000   Median :4.350  \n Mean   : 75.50   Mean   :5.843   Mean   :3.054   Mean   :3.759  \n 3rd Qu.:112.75   3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100  \n Max.   :150.00   Max.   :7.900   Max.   :4.400   Max.   :6.900  \n  PetalWidthCm     Species         \n Min.   :0.100   Length:150        \n 1st Qu.:0.300   Class :character  \n Median :1.300   Mode  :character  \n Mean   :1.199                     \n 3rd Qu.:1.800                     \n Max.   :2.500                     \n```\n:::\n\n```{.r .cell-code}\n# Distribution plot for Sepal.Length\nggplot(IRSI_data, aes(x = SepalLengthCm)) +\n  geom_histogram(binwidth = 0.1, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Sepal Length\",\n       x = \"Sepal Length\",\n       y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Boxplot for Sepal.Length by Species\nggplot(IRSI_data, aes(x = Species, y = SepalWidthCm)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Sepal Length by Species\",\n       x = \"Species\",\n       y = \"Sepal Length\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Scatter plot for Petal.Length and Petal.Width\nggplot(IRSI_data, aes(x = PetalLengthCm, y = PetalWidthCm, color = Species)) +\n  geom_point() +\n  labs(title = \"Scatter Plot of Petal Length vs Petal Width\",\n       x = \"Petal Length\",\n       y = \"Petal Width\",\n       color = \"Species\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Pair plot\npairs(IRSI_data[, c(\"SepalLengthCm\", \"SepalWidthCm\", \"PetalLengthCm\", \"PetalWidthCm\")], \n      main = \"Pair Plot of Iris Data\",\n      pch = 21, bg = c(\"red\", \"green3\", \"blue\")[unclass(IRSI_data$Species)])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Correlation matrix\ncor_matrix <- cor(IRSI_data[, c(\"SepalLengthCm\", \"SepalWidthCm\", \"PetalLengthCm\", \"PetalWidthCm\")])\n\n# Violin plot\nggplot(IRSI_data, aes(x = Species, y = PetalLengthCm, fill = Species)) +\n  geom_violin(trim = FALSE) +\n  labs(title = \"Violin Plot of Petal Length by Species\",\n       x = \"Species\",\n       y = \"Petal Length\",\n       fill = \"Species\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Density plot\nggplot(IRSI_data, aes(x = PetalWidthCm, fill = Species)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Density Plot of Petal Width by Species\",\n       x = \"Petal Width\",\n       fill = \"Species\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# Load necessary library for machine learning\nlibrary(rpart)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rpart' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\n# Split the data into training and testing sets\nset.seed(123)\nsample_index <- sample(1:nrow(IRSI_data), 0.7 * nrow(IRSI_data))\ntrain_data <- IRSI_data[sample_index, ]\ntest_data <- IRSI_data[-sample_index, ]\n\n# Build a decision tree model\niris_model <- rpart(Species ~ SepalLengthCm + SepalWidthCm + PetalLengthCm + PetalWidthCm, data = train_data, method = \"class\")\n\n# Visualize the decision tree\nplot(iris_model)\ntext(iris_model, cex = 0.8)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-7.png){width=672}\n:::\n\n```{.r .cell-code}\n# Make predictions on the test set\npredictions <- predict(iris_model, newdata = test_data, type = \"class\")\n\n# Evaluate the model\nconf_matrix <- table(predictions, test_data$Species)\naccuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)\nprint(paste(\"Accuracy:\", round(accuracy, 2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Accuracy: 0.98\"\n```\n:::\n\n```{.r .cell-code}\n# If you want to see the confusion matrix\nprint(\"Confusion Matrix:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Confusion Matrix:\"\n```\n:::\n\n```{.r .cell-code}\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 \npredictions       Iris-setosa Iris-versicolor Iris-virginica\n  Iris-setosa              14               0              0\n  Iris-versicolor           0              18              1\n  Iris-virginica            0               0             12\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}