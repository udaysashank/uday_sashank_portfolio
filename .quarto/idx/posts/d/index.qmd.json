{"title":"General R knowledge","markdown":{"yaml":{"title":"General R knowledge","date":"03-2-2023","author":"Uday Sashank Kanapala","categories":["code","analysis","visualization","plotly","data anlysis","R"],"image":"b.jpg"},"headingText":"Business Problem","containsRefs":false,"markdown":"\n\n\nIn this group project, you will work with analysts' forecast data of earning per share (EPS) provided by Wharton Research Data Services (WRDS). Institutional Brokers' Estimate System (I/B/E/S) provides historical data on certain financial indicators collected from thousands of individual analysts working in more than 3,000 broker houses.\n\n-   **TICKER:** A unique identifier assigned to each security. In this group project, you will only model \"NFLX\" ticker.\n\n-   **CNAME:** Company name\n\n-   **ACTDATS:** The Activation date: It is the date when the analyst forecast became effective within the IBES database.\n\n-   **ESTIMATOR:** Sellside institution (mostly broker house). It is just the broker.\n\n-   **ANALYS:** The person who makes the forecast and work for sellside institution. Estimators and analysts are represented by codes to hide their real names.\n\n-   **FPI:** Forecast Period Indicator: The forecasting period. 6: Next Fiscal Quarter 1: Next Fiscal Year\n\n-   **MEASURE**: The variable being estimated. We have data for earning per share (EPS)\n\n-   **VALUE:** The forecasted value of EPS\n\n-   **FPEDATS**: The Forecast Period End Date: It is the ending date of the fiscal period to which the estimate applies. For the majority of companies, the FPEDATS date is December 31st of that year.\n\n-   **REVDATS:** The Review Date: It is the most recent date on which IBES called the analyst and verified that particular estimate as still valid for that analyst. If an analyst confirms that a previous estimate is still valid, the original database record for that estimate is retained and only the REVDATS variable is updated. If an analyst changes their estimate for a given company, a new record is entered in the database with a new ANNDATS. The old record of the analyst (containing the previous estimate) is retained in the database.\n\n-   **REVTIMS**: Time-stamp of REVDATS\n\n-   **ANNDATS**: The Announce date: It is the date on which the analyst first made that particular estimate.\n\n-   **ANNTIMS**: Time-stamp of ANNDATS\n\n-   **ACTUAL**: The realized EPS, the true EPS value.\n\n-   **ANNDATS_ACT**: The Announced date of Actual EPS: The actual EPS value is announced by the company at this date.\n\n-   **ANNTIMS_ACT**: The time-stamp of ANNDATS_ACT\n\n```{r, echo=TRUE, warning=FALSE}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(kableExtra)\nlibrary(corrplot)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(data.table)\nlibrary(flextable)\nlibrary(tidyverse)\nlibrary(gridExtra)\nNFLX <- read.csv(\"C:/Users/P/Downloads/USK/USK/usk/NFLX.csv\", header=TRUE)\nnames(NFLX)\n```\n\n## How to read the data\n\n**The first row in NFLX data set**: On 09‐Aug-2002 (ANNDATS), analyst 6749 (ANALYS) at Estimator 1872 (ESTIMATOR) predicts that the EPS (MEASURE) for NETFLIX INC. (CNAME) with a ticker of NFLX (TICKER) with forecast period ending 30‐Sep-2002 (FPEDATS) is -\\$0.0086 (VALUE). This estimates was entered into the database on 12‐Aug-2002 (ACTDATS). On 17-Oct-2002 (ANNDATS_ACT), NETFLIX INC. announced an actual EPS of \\$7e-04 (\\$0.0007) (ACTUAL) for this quarter (FPI=6).\n\n```{r, echo=TRUE}\nhead(NFLX,n=1)\n```\n\n## Your Turn:\n\n::: {.callout-important appearance=\"simple\"}\n## Task 1A: Calculate Missingness\n\nCheck to see the missing values in NFLX dataset and calculate the percent missing for each variable in `NFLX` and list your findings in R object called `NFLX_missingness`. `NFLX_missingness` is a dataframe with two columns: The first column, `Variable`, stores the variable names and the second column, `Missingness` shows the percent missing in percentage points with two decimal points.\n:::\n\n## Your code for Task 1A\n\n```{r, echo=TRUE}\nNFLX <- read.csv(\"C:/Users/P/Downloads/USK/USK/usk/NFLX.csv\", header=TRUE)\n\nNFLX_missingness <- NFLX %>%\n  summarise_all(~mean(is.na(.)) * 100)\n\nNFLX_missingness_table <- NFLX_missingness %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nprint(NFLX_missingness_table)\n\ndata_long <- gather(NFLX_missingness, key = \"Variable\", value = \"MissingPercentage\")\n\ncolor_palette <- c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#FF7F00\", \"#F781BF\", \"#A65628\",\n                   \"#984EA3\", \"#999999\", \"#66C2A5\", \"#FC8D62\", \"#8EBA42\", \"#FFD92F\",\n                   \"#E7298A\", \"#1B9E77\", \"#D95F02\", \"#7570B3\")\n\nmissingness_plot <- ggplot(data_long, aes(x = reorder(Variable, -MissingPercentage), y = MissingPercentage, fill = Variable)) +\n  geom_bar(stat = \"identity\", fill = color_palette) +\n  labs(title = \"Missing Values Percentage by Variable\", x = \"Variable\", y = \"Missing Percentage\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nprint(missingness_plot)\n\n```\n\n::: {.callout-important appearance=\"simple\"}\n## Task 1B: Data Manipulation\n\nConduct the following data manipulations on `NFLX`:\n\n-   Drop rows from the data set when a variable has a missing value\n\n-   Drop rows from the data set the quarterly forecasts (drop FPI=6)\n\n-   Declare TICKER, CNAME, ESTIMATOR , ANALYS, FPI , and MEASURE variables as factor\n\n-   Declare ACTDATS, FPEDATS , ANNDATS, REVDATS, ANNDATS_ACT as time variable.\n\n-   Drop ANNTIMS_ACT, ANNTIMS , and REVTIMS\n\n-   Create a new column named YEAR that captures the year in FPEDATS\n\n-   Name your reduced dataset as `NFLX1`\n\n-   Print out data structure and the summary of NFLX1\n:::\n\n## Your code for Task 1B\n\n```{r, echo=TRUE}\n# Copy NFLX to NFLX1 without assigning data types\nNFLX1 <- NFLX\n\n# Drop rows from the data set when a variable has a missing value\nNFLX1 <- NFLX1 %>% na.omit()\n\n# Drop rows from the data set where FPI=6\nNFLX1 <- NFLX1 %>% filter(FPI != 6)\n\n# Drop ANNTIMS_ACT, ANNTIMS, and REVTIMS\nNFLX1 <- NFLX1 %>% select(-ANNTIMS_ACT, -ANNTIMS, -REVTIMS)\n\n# Create a new column named YEAR that is an exact copy of the data in FPEDATS\nNFLX1 <- NFLX1 %>% mutate(YEAR = FPEDATS)\n\n# Print out data structure and the summary of NFLX1\nstr(NFLX1)\nsummary(NFLX1)\n```\n\n::: {.callout-important appearance=\"simple\"}\n## Task 2: Calculate Number of Analysts and Brokerage Houses\n\n-   Calculate the total number of **unique** analysts in **NFLX1** dataset that provide forecasts **each year** and name your R object as **NumberAnalyst**\n\n-   Calculate the total number of **unique** brokerage houses (ESTIMATOR) in **NFLX1** dataset that provide forecasts **each year** and name your R object as **NumberBrokerage**\n\n-   **Need Written Response in this callout:** In which year(s) we have the highest number of unique analysts providing forecasts for NFLX ticker? In which year(s), we have the highest number of unique brokerage houses providing forecasts for the NFLX ticker.\n\n\\\n***In 2020 , Netflix received forecasts from a distinct set of analysts and brokerage firms. on the same year the number of unique brokerage firm was 44 on the same period the number of unique analyst was 46.***\n:::\n\n## Your code for Task 2\n\n```{r, echo=TRUE}\n\n# Calculate the number of unique analysts by year\nNumberAnalyst <- NFLX1 %>%\n  group_by(YEAR) %>%\n  summarise(NumAnalysts = n_distinct(ANALYS)) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  column_spec(1, bold = TRUE)  \n\n# Calculate the number of unique brokerages by year\nNumberBrokerage <- NFLX1 %>%\n  group_by(YEAR) %>%\n  summarise(NumBrokerage = n_distinct(ESTIMATOR)) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  row_spec(0, color = \"red\", bold = TRUE)  \n\n# Print the results\nNumberAnalyst\nNumberBrokerage\n```\n\n::: {.callout-important appearance=\"simple\"}\n## Task 3: Get the most recent forecast in each year\n\n-   It is quite possible that an analyst makes multiple forecasts throughout the year for the same fiscal period. Remove observations from **NFLX1** if an analyst has multiple predictions for the same year and keep the last one (the most recent forecast for each year). Name your new dataset as **NFLX2.** This step is crucial for successful execution of the following tasks. Print the dimension of `NFLX2`.\n\n-   Check your work: If your `NFLX2` dataset has 641 rows and 14 columns, then you are on the right track. If not, please seek help!\n:::\n\n## Your code for Task 3\n\n```{r, echo=TRUE}\nNFLX2 <- NFLX1 %>%\n  group_by(ANALYS, YEAR) %>%\n  filter(REVDATS == max(REVDATS)) %>%\n  ungroup()\n\ndim_output <- dim(NFLX2)\n\ndim_table <- as.data.frame(dim_output) %>%\n  kable(format = \"html\") %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  row_spec(0, bold = TRUE, color = \"blue\") %>%\n  column_spec(1, bold = TRUE, color = \"green\")\n\n# Print the styled dimension table\nprint(dim_table)\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 4: Calculate past accuracy\n\n-   Create a copy of `NFLX2` and call it `NFLX3`\n\n-   For every year within the dataset `NFLX3`, compute the forecasting performance of each analyst for the current year and store the results in a new column labeled `accuracy`. In the calculation of forecast performance, you can use the VALUE-ACTUAL as the forecast accuracy measure.\n\n-   For each year in the `NFLX3` dataset, compute the forecasting performance of each analyst from the **previous year** and store the results in a new column called `past_accuracy`\n\n-   As an example, consider the year 2006, where analyst 1047, employed at brokerage house 464, provided an estimated end-of-period EPS of 0.0929 (VALUE). However, the actual EPS for that year turned out to be 0.1014 (ACTUAL), resulting in a forecasting error of -0.0085. Consequently, in the subsequent year, 2007, the past_accuracy metric for analyst 1047 would reflect this error by taking the value of -0.0085 (VALUE-ACTUAL).\n\n-   This action will create some missing values and this is perfectly fine.\n\n-   If your code produces 144 NAs, then you are on the right track.\n\n-   Note that we are creating copies of the original dataset at each step to facilitate error detection in case any mistakes occur during the process.\n:::\n\n## Your code for Task 4\n\n```{r, echo=TRUE}\nNFLX3 <- NFLX2\n\nNFLX3 <- NFLX3 %>%\n  group_by(YEAR, ANALYS) %>%\n  mutate(accuracy = VALUE - ACTUAL) %>%\n  group_by(ANALYS) %>%\n  arrange(YEAR) %>%\n  mutate(past_accuracy = lag(accuracy))\n\nsum(is.na(NFLX3$past_accuracy))\n\nsum(is.na(NFLX3$past_accuracy)) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 5: Forecast Horizon\n\n-   The longer the forecast horizon, the higher the uncertainty associated with EPS forecasts. To control for this fact, create a new column in **NFLX3** called **horizon** that captures the forecast horizon (ANNDATS_ACT- ANNDATS) for **each analyst**.\n\n-   We anticipate observing a negative correlation between `accuracy` and `horizon`. Typically, as the forecast horizon increases, the accuracy tends to decrease, and vice versa. However, in our dataset, there is an exception where we find a positive correlation between `accuracy` and `horizon` for one specific year. Write an R code to identify and determine which year exhibits this positive correlation.\n\n-   **Need Written Response in this callout:** Enter the year in here.\n\n***The year was 2018 on the month of December 31 to be precise with a correlation value of 0.243.***\n:::\n\n## Your code for Task 5\n\n```{r, echo=TRUE}\n# Your data manipulation code\nNFLX3 <- NFLX3 %>%\n  group_by(ANALYS) %>%\n  arrange(YEAR) %>%\n  mutate(past_accuracy = lag(accuracy, default = NA))  # Correct lag function usage\n\n# Calculate the forecast horizon for each analyst\nNFLX3 <- NFLX3 %>%\n  mutate(horizon = as.numeric(difftime(ANNDATS_ACT, ANNDATS, units = \"days\")))\n\n# Calculate the correlation between accuracy and horizon for each year\ncorrelation_by_year <- NFLX3 %>%\n  group_by(YEAR) %>%\n  summarise(correlation = cor(accuracy, horizon, use = \"complete.obs\"))\n\n# Find the year with a positive correlation\npositive_corr_year <- correlation_by_year %>%\n  filter(correlation > 0)\n\n# Print the year with a positive correlation using kable for formatting\nkable(positive_corr_year, format = \"html\", caption = \"Years with Positive Correlation\")\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Table 6: Experience\n\n-   We assume that if an analyst is monitoring a company for a long period of time, he/she is expected to make more informed predictions. Create a new column in NFLX3 called **experience** that counts the cumulative number of years the analyst monitor (have predictions) the company. Print the summary of experience column.\n\n-   **Hint:** Try to use cumsum() function in R.\n\n-   **Need Written Response in this callout:** Which analyst (s) has the highest number of **experience** in **NFLX3** dataset and for how long do they monitor the NFLX ticker?\n\n***There were two analysts of unique identifier 72088 and 77748 with the highest experience who observed the NTFLX ticker for 17 years each as observed in the graph.***\n:::\n\n## Your code for Task 6\n\n```{r, echo=TRUE}\n# Enter your code for Task 6 below \nNFLX3 <- NFLX3 %>%\n  group_by(ANALYS) %>%\n  mutate(experience = cumsum(!duplicated(YEAR)))\n\nmax_experience <- NFLX3 %>%\n  group_by(ANALYS) %>%\n  summarise(experience = max(experience)) %>%\n  filter(experience == max(experience)) %>%\n  arrange(desc(experience))\n\nexperience_summary <- NFLX3 %>%\n  summarise(\n    Min = min(experience),\n    Max = max(experience),\n    Mean = mean(experience),\n    Median = median(experience),\n    SD = sd(experience)\n  )\n\nexperience_summary %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nmax_experience %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  row_spec(which(1:nrow(max_experience) %% 2 == 0), background = \"#F2F2F2\") %>%\n  row_spec(which(1:nrow(max_experience) %% 2 != 0), background = \"#D9EAD3\")\n\nggplot(max_experience, aes(x = reorder(ANALYS, -experience), y = experience, fill = experience)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Analyst(s) with Maximum Experience\",\n       x = \"Analyst\",\n       y = \"Experience\") +\n  scale_fill_viridis_c(option = \"magma\", direction = -1) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  guides(fill = guide_colorbar(title = \"Experience\")) \n\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 7: Size\n\n-   If a brokerage house has multiple analysts providing predictions for the same company, it may indicate a greater allocation of resources for company analysis. To capture this, create a new column in the `NFLX3` dataset called `size` that calculates the total count of **unique** analysts employed **per year** by **each** brokerage house (ESTIMATOR)\n\n-   **Need Written Response in this callout:** Print the frequencies for **size** variable. What does this frequency table reveal about the distribution of the number of analysts hired by brokerage houses in this dataset?\n\n***The graph shows a clear trend: as the number of analysts rises, the hiring frequency decreases significantly. A clear indication of hiring trend, in which the brokerage firm higher one analyst per season.***\n:::\n\n## Your code for Task 7\n\n```{r, echo=TRUE}\n# Enter your code for Task 7 below \nNFLX3 <- NFLX3 %>%\n  group_by(YEAR, ESTIMATOR) %>%\n  mutate(size = n_distinct(ANALYS))\n\nsize_freq <- table(NFLX3$size)\n\nsize_table <- as.data.frame(size_freq)\ncolnames(size_table) <- c(\"Number of Analysts\", \"Frequency\")\n\nsize_table <- size_table[order(-size_table$Frequency), ]\n\nsize_table %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nsummary_stats <- summary(NFLX3$size)\n\nsummary_data <- data.frame(\n  Statistic = names(summary_stats),\n  Value = as.character(summary_stats)\n)\n\nsummary_data %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nggplot(size_table, aes(x = factor(`Number of Analysts`), y = Frequency, fill = `Number of Analysts`)) +\n  geom_bar(stat = \"identity\") +\n  ggtitle(\"Number of Unique Analysts per Year and ESTIMATOR\") +\n  xlab(\"Number of Analysts\") +\n  ylab(\"Frequency\") +\n  scale_fill_manual(\n    values = c(\"#1f78b4\", \"#33a02c\", \"#e31a1c\", \"#ff7f00\", \"#6a3d9a\")  # Example colors, feel free to change\n  ) +\n  theme_minimal()\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 8: Prediction 1\n\n-   In the year 2020, NETFLIX reported an actual earnings per share (EPS) of \\$6.08. To predict this EPS value based on historical data, we will employ a linear regression model using the dataset `NFLX3` up until the year 2019. In this model, the target variable will be `ACTUAL` and the predictor variables will include `VALUE` and `past_accuracy`. C.all your model as `model1.`\n\n-   **Need Written Response in this callout:** Using the linear regression model 'model1,' which has been trained on historical data up to the year 2019, what is the forecasted EPS (Earnings Per Share) for the year 2020? Please provide a brief explanation of the method you employed to make this prediction. If you encountered any challenges or were unable to make the calculation, briefly describe the specific issues you encountered.\n\n::: {.callout-important appearance=\"simple\"}\n***When utilizing the linear regression model 'model1', trained on historical data up until 2019, to forecast EPS for 2020, a rigorous evaluation of the model's fit is conducted using the R-squared value. Should this metric surpass the 0.5 threshold, indicating a robust fit, the forecasting process commences. Central to this process is the calculation of the mean of the 'past_accuracy' variable. In instances where the R-squared value meets the prescribed criterion, a new dataset is meticulously curated, ensuring the incorporation of pertinent independent variables. Subsequently, EPS estimates for the future period are meticulously derived through the adept utilization of the 'predict' function.However, in scenarios where the R-squared value fails to meet the specified threshold, a cautionary warning emerges, signaling potential inaccuracies in the subsequent EPS predictions. Addressing specific nuances in data configuration or refining the model's training approach becomes imperative, safeguarding the accuracy and reliability of future EPS projections.***\n:::\n:::\n\n## Your code for Task 8\n\n```{r, echo=TRUE}\nmean_past_accuracy <- mean(NFLX3$past_accuracy, na.rm = TRUE)\n\nmodel1 <- lm(ACTUAL ~ VALUE + past_accuracy, data = NFLX3)\n\n# Get the R-squared value of the model\nr_squared <- summary(model1)$r.squared\n\n# If the R-squared value is high, then we can use the model to generate a forecast\nif (r_squared > 0.5) {\n  new_data_future <- data.frame(\n    VALUE = 6.08, # Replace this with the actual value of VALUE for the future period\n    past_accuracy = mean_past_accuracy\n  )\n\n  predicted_eps_future <- predict(model1, newdata = new_data_future)\n  cat(\"Forecasted EPS for future period: $\", round(predicted_eps_future, 2))\n\n} else {\n\n  cat(\"The R-squared value is low, so the model may not be able to accurately predict future values of the dependent variable.\")\n\n}\n\nkable(round(mean_past_accuracy, 2), col.names = \"Mean past_accuracy\", format = \"html\") %>%\n  kable_styling(bootstrap_options = \"striped\", full_width = FALSE, position = \"center\")\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 9: Prediction 2\n\n-   As an alternative approach, instead of modeling the 'ACTUAL' value, we can obtain the mean and median forecasts for the year 2020 as our best estimates of the EPS value for that year.\n\n-   **Need Written Response in this callout:** Please calculate these forecasts and then compare them with the results from the previous task. Finally, provide your insights and comments based on your findings.\n\n***In this alternative strategy, we have opted to derive our EPS forecasts for 2020 based on two fundamental metrics: the mean and median projections. These straightforward yet essential statistical measures offer valuable insights. The mean forecast, standing at approximately \\$1.24, reflects*** ***a balanced average of our expectations for 2020 EPS. In contrast, the median forecast, notably lower at around \\$0.41, underscores a central tendency amidst the data distribution. When juxtaposed with the model-driven approach expl*****ored earlier, it becomes apparent that the model's complexity might yield a more nuanced and potentially accurate prediction. However, the simplicity of mean and median forecasts should not be underestimated. While lacking the sophistication of a well-fitted model, they provide accessible, *high-level insights. The selection between these methodologies should hinge upon the data's quality and the specific context of the analysis, emphasizing the need for a judicious approach in forecasting decisions.***\n:::\n\n## Your code for Task 9\n\n```{r, echo=TRUE}\nmean_forecast <- mean(NFLX3$VALUE, na.rm = TRUE)\nmedian_forecast <- median(NFLX3$VALUE, na.rm = TRUE)\nforecast_summary <- data.frame(\n  Metric = c(\"Mean forecast for 2020\", \"Median forecast for 2020\"),\n  Value = c(round(mean_forecast, 2), round(median_forecast, 2))\n)\n\nforecast_summary %>%\n  kable(col.names = c(\"Metric\", \"Value\"), align = c(\"l\", \"c\"), caption = \"Forecast Summary for 2020\") %>%\n  kable_styling(bootstrap_options = \"striped\", full_width = FALSE, position = \"center\")\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 10: Averages\n\n-   Generate a new dataset named `NFLX4` by aggregating data from `NFLX3` Include the variables `size`, `experience`, `horizon`, `accuracy,` `past_accuracy`, and `ACTUAL` in `NFLX4`. When calculating the yearly averages for these variables, ignore any missing values (NAs). Present a summary of the `NFLX4` dataset.\n\n-   **Need Written Response in this callout:** Subsequently, employ correlation analysis or exploratory data analysis to get insights into the relationships between these variables and 'ACTUAL,' if such relationships exist.\n\n***Through in-depth correlation analysis and exploratory data analysis of the NFLX4 data set, significant insights into the relationship between various variables and 'ACTUAL' earnings per share have surfaced. The data uncovers positive correlations between 'ACTUAL' and 'size' (0.18) as well as 'experience' (0.69), suggesting that larger analyst groups and more seasoned analysts tend to provide more accurate forecasts. In contrast, negative correlations with 'horizon' (-0.63) and 'past_accuracy' (-0.80) indicate that analysts with longer forecasting horizons and higher past accuracy might yield less precise predictions for 'ACTUAL' earnings per share. Detailed scatter plots further underscore these trends, including the one highlighting enhanced accuracy with an increasing number of analysts. These findings present invaluable insights for analysts, investors, and financial decision-makers, offering essential perspectives into the factors influencing earnings per share forecasts.***\n:::\n\n```{r, echo=TRUE}\nNFLX4 <- NFLX3 %>%\n  group_by(YEAR) %>%\n  summarise(\n    size = mean(size, na.rm = TRUE),\n    experience = mean(experience, na.rm = TRUE),\n    horizon = mean(horizon, na.rm = TRUE),\n    accuracy = mean(accuracy, na.rm = TRUE),\n    past_accuracy = mean(past_accuracy, na.rm = TRUE),\n    ACTUAL = mean(ACTUAL, na.rm = TRUE)\n  )\n\nsummary(NFLX4)\n\ncorrelation_matrix <- cor(NFLX4[, c(\"size\", \"experience\", \"horizon\", \"accuracy\", \"past_accuracy\", \"ACTUAL\")], use = \"complete.obs\")\n\nprint(correlation_matrix)\n\ncustom_colors <- c(\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\")\ncorrplot(\n  correlation_matrix,\n  method = \"color\",\n  col = custom_colors,\n  type = \"upper\",\n  tl.cex = 0.7,\n  cl.cex = 0.8,\n  diag = FALSE,\n  number.cex = 0.8\n)\n\nggplot(NFLX4, aes(x = YEAR, y = experience, fill = YEAR)) +\n  geom_boxplot() +\n  ggtitle(\"Experience Distribution Across Years\") +\n  xlab(\"Year\") +\n  ylab(\"Experience\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\nggplot(NFLX4, aes(x = accuracy, fill = YEAR)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Accuracy\") +\n  xlab(\"Accuracy\") +\n  ylab(\"Density\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\nggplot(NFLX4, aes(x = YEAR, y = size, fill = YEAR)) +\n  geom_boxplot() +\n  ggtitle(\"Size Distribution Across Years\") +\n  xlab(\"Year\") +\n  ylab(\"Size\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\nggplot(NFLX4, aes(x = horizon, fill = YEAR)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Horizon\") +\n  xlab(\"Horizon\") +\n  ylab(\"Density\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\nggplot(NFLX4, aes(x = ACTUAL, fill = YEAR)) +\n  geom_histogram(alpha = 0.5, bins = 30) +\n  ggtitle(\"Histogram of ACTUAL\") +\n  xlab(\"ACTUAL\") +\n  ylab(\"Frequency\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\ncorrelation_data <- data.table::melt(correlation_matrix)\n\nggplot(correlation_data, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile() +\n  scale_fill_gradientn(colors = custom_colors) +\n  ggtitle(\"Correlation Heatmap\") +\n  xlab(\"Variables\") +\n  ylab(\"Variables\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nggplot(NFLX4, aes(x = past_accuracy, y = ACTUAL)) +\n  geom_point(color = \"#41b6c4\", shape = 20, size = 3) +\n  ggtitle(\"ACTUAL vs. past_accuracy\") +\n  xlab(\"past_accuracy\") +\n  ylab(\"ACTUAL\")\n```\n","srcMarkdownNoYaml":"\n\n# Business Problem\n\nIn this group project, you will work with analysts' forecast data of earning per share (EPS) provided by Wharton Research Data Services (WRDS). Institutional Brokers' Estimate System (I/B/E/S) provides historical data on certain financial indicators collected from thousands of individual analysts working in more than 3,000 broker houses.\n\n-   **TICKER:** A unique identifier assigned to each security. In this group project, you will only model \"NFLX\" ticker.\n\n-   **CNAME:** Company name\n\n-   **ACTDATS:** The Activation date: It is the date when the analyst forecast became effective within the IBES database.\n\n-   **ESTIMATOR:** Sellside institution (mostly broker house). It is just the broker.\n\n-   **ANALYS:** The person who makes the forecast and work for sellside institution. Estimators and analysts are represented by codes to hide their real names.\n\n-   **FPI:** Forecast Period Indicator: The forecasting period. 6: Next Fiscal Quarter 1: Next Fiscal Year\n\n-   **MEASURE**: The variable being estimated. We have data for earning per share (EPS)\n\n-   **VALUE:** The forecasted value of EPS\n\n-   **FPEDATS**: The Forecast Period End Date: It is the ending date of the fiscal period to which the estimate applies. For the majority of companies, the FPEDATS date is December 31st of that year.\n\n-   **REVDATS:** The Review Date: It is the most recent date on which IBES called the analyst and verified that particular estimate as still valid for that analyst. If an analyst confirms that a previous estimate is still valid, the original database record for that estimate is retained and only the REVDATS variable is updated. If an analyst changes their estimate for a given company, a new record is entered in the database with a new ANNDATS. The old record of the analyst (containing the previous estimate) is retained in the database.\n\n-   **REVTIMS**: Time-stamp of REVDATS\n\n-   **ANNDATS**: The Announce date: It is the date on which the analyst first made that particular estimate.\n\n-   **ANNTIMS**: Time-stamp of ANNDATS\n\n-   **ACTUAL**: The realized EPS, the true EPS value.\n\n-   **ANNDATS_ACT**: The Announced date of Actual EPS: The actual EPS value is announced by the company at this date.\n\n-   **ANNTIMS_ACT**: The time-stamp of ANNDATS_ACT\n\n```{r, echo=TRUE, warning=FALSE}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(kableExtra)\nlibrary(corrplot)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(data.table)\nlibrary(flextable)\nlibrary(tidyverse)\nlibrary(gridExtra)\nNFLX <- read.csv(\"C:/Users/P/Downloads/USK/USK/usk/NFLX.csv\", header=TRUE)\nnames(NFLX)\n```\n\n## How to read the data\n\n**The first row in NFLX data set**: On 09‐Aug-2002 (ANNDATS), analyst 6749 (ANALYS) at Estimator 1872 (ESTIMATOR) predicts that the EPS (MEASURE) for NETFLIX INC. (CNAME) with a ticker of NFLX (TICKER) with forecast period ending 30‐Sep-2002 (FPEDATS) is -\\$0.0086 (VALUE). This estimates was entered into the database on 12‐Aug-2002 (ACTDATS). On 17-Oct-2002 (ANNDATS_ACT), NETFLIX INC. announced an actual EPS of \\$7e-04 (\\$0.0007) (ACTUAL) for this quarter (FPI=6).\n\n```{r, echo=TRUE}\nhead(NFLX,n=1)\n```\n\n## Your Turn:\n\n::: {.callout-important appearance=\"simple\"}\n## Task 1A: Calculate Missingness\n\nCheck to see the missing values in NFLX dataset and calculate the percent missing for each variable in `NFLX` and list your findings in R object called `NFLX_missingness`. `NFLX_missingness` is a dataframe with two columns: The first column, `Variable`, stores the variable names and the second column, `Missingness` shows the percent missing in percentage points with two decimal points.\n:::\n\n## Your code for Task 1A\n\n```{r, echo=TRUE}\nNFLX <- read.csv(\"C:/Users/P/Downloads/USK/USK/usk/NFLX.csv\", header=TRUE)\n\nNFLX_missingness <- NFLX %>%\n  summarise_all(~mean(is.na(.)) * 100)\n\nNFLX_missingness_table <- NFLX_missingness %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nprint(NFLX_missingness_table)\n\ndata_long <- gather(NFLX_missingness, key = \"Variable\", value = \"MissingPercentage\")\n\ncolor_palette <- c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#FF7F00\", \"#F781BF\", \"#A65628\",\n                   \"#984EA3\", \"#999999\", \"#66C2A5\", \"#FC8D62\", \"#8EBA42\", \"#FFD92F\",\n                   \"#E7298A\", \"#1B9E77\", \"#D95F02\", \"#7570B3\")\n\nmissingness_plot <- ggplot(data_long, aes(x = reorder(Variable, -MissingPercentage), y = MissingPercentage, fill = Variable)) +\n  geom_bar(stat = \"identity\", fill = color_palette) +\n  labs(title = \"Missing Values Percentage by Variable\", x = \"Variable\", y = \"Missing Percentage\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nprint(missingness_plot)\n\n```\n\n::: {.callout-important appearance=\"simple\"}\n## Task 1B: Data Manipulation\n\nConduct the following data manipulations on `NFLX`:\n\n-   Drop rows from the data set when a variable has a missing value\n\n-   Drop rows from the data set the quarterly forecasts (drop FPI=6)\n\n-   Declare TICKER, CNAME, ESTIMATOR , ANALYS, FPI , and MEASURE variables as factor\n\n-   Declare ACTDATS, FPEDATS , ANNDATS, REVDATS, ANNDATS_ACT as time variable.\n\n-   Drop ANNTIMS_ACT, ANNTIMS , and REVTIMS\n\n-   Create a new column named YEAR that captures the year in FPEDATS\n\n-   Name your reduced dataset as `NFLX1`\n\n-   Print out data structure and the summary of NFLX1\n:::\n\n## Your code for Task 1B\n\n```{r, echo=TRUE}\n# Copy NFLX to NFLX1 without assigning data types\nNFLX1 <- NFLX\n\n# Drop rows from the data set when a variable has a missing value\nNFLX1 <- NFLX1 %>% na.omit()\n\n# Drop rows from the data set where FPI=6\nNFLX1 <- NFLX1 %>% filter(FPI != 6)\n\n# Drop ANNTIMS_ACT, ANNTIMS, and REVTIMS\nNFLX1 <- NFLX1 %>% select(-ANNTIMS_ACT, -ANNTIMS, -REVTIMS)\n\n# Create a new column named YEAR that is an exact copy of the data in FPEDATS\nNFLX1 <- NFLX1 %>% mutate(YEAR = FPEDATS)\n\n# Print out data structure and the summary of NFLX1\nstr(NFLX1)\nsummary(NFLX1)\n```\n\n::: {.callout-important appearance=\"simple\"}\n## Task 2: Calculate Number of Analysts and Brokerage Houses\n\n-   Calculate the total number of **unique** analysts in **NFLX1** dataset that provide forecasts **each year** and name your R object as **NumberAnalyst**\n\n-   Calculate the total number of **unique** brokerage houses (ESTIMATOR) in **NFLX1** dataset that provide forecasts **each year** and name your R object as **NumberBrokerage**\n\n-   **Need Written Response in this callout:** In which year(s) we have the highest number of unique analysts providing forecasts for NFLX ticker? In which year(s), we have the highest number of unique brokerage houses providing forecasts for the NFLX ticker.\n\n\\\n***In 2020 , Netflix received forecasts from a distinct set of analysts and brokerage firms. on the same year the number of unique brokerage firm was 44 on the same period the number of unique analyst was 46.***\n:::\n\n## Your code for Task 2\n\n```{r, echo=TRUE}\n\n# Calculate the number of unique analysts by year\nNumberAnalyst <- NFLX1 %>%\n  group_by(YEAR) %>%\n  summarise(NumAnalysts = n_distinct(ANALYS)) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  column_spec(1, bold = TRUE)  \n\n# Calculate the number of unique brokerages by year\nNumberBrokerage <- NFLX1 %>%\n  group_by(YEAR) %>%\n  summarise(NumBrokerage = n_distinct(ESTIMATOR)) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  row_spec(0, color = \"red\", bold = TRUE)  \n\n# Print the results\nNumberAnalyst\nNumberBrokerage\n```\n\n::: {.callout-important appearance=\"simple\"}\n## Task 3: Get the most recent forecast in each year\n\n-   It is quite possible that an analyst makes multiple forecasts throughout the year for the same fiscal period. Remove observations from **NFLX1** if an analyst has multiple predictions for the same year and keep the last one (the most recent forecast for each year). Name your new dataset as **NFLX2.** This step is crucial for successful execution of the following tasks. Print the dimension of `NFLX2`.\n\n-   Check your work: If your `NFLX2` dataset has 641 rows and 14 columns, then you are on the right track. If not, please seek help!\n:::\n\n## Your code for Task 3\n\n```{r, echo=TRUE}\nNFLX2 <- NFLX1 %>%\n  group_by(ANALYS, YEAR) %>%\n  filter(REVDATS == max(REVDATS)) %>%\n  ungroup()\n\ndim_output <- dim(NFLX2)\n\ndim_table <- as.data.frame(dim_output) %>%\n  kable(format = \"html\") %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  row_spec(0, bold = TRUE, color = \"blue\") %>%\n  column_spec(1, bold = TRUE, color = \"green\")\n\n# Print the styled dimension table\nprint(dim_table)\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 4: Calculate past accuracy\n\n-   Create a copy of `NFLX2` and call it `NFLX3`\n\n-   For every year within the dataset `NFLX3`, compute the forecasting performance of each analyst for the current year and store the results in a new column labeled `accuracy`. In the calculation of forecast performance, you can use the VALUE-ACTUAL as the forecast accuracy measure.\n\n-   For each year in the `NFLX3` dataset, compute the forecasting performance of each analyst from the **previous year** and store the results in a new column called `past_accuracy`\n\n-   As an example, consider the year 2006, where analyst 1047, employed at brokerage house 464, provided an estimated end-of-period EPS of 0.0929 (VALUE). However, the actual EPS for that year turned out to be 0.1014 (ACTUAL), resulting in a forecasting error of -0.0085. Consequently, in the subsequent year, 2007, the past_accuracy metric for analyst 1047 would reflect this error by taking the value of -0.0085 (VALUE-ACTUAL).\n\n-   This action will create some missing values and this is perfectly fine.\n\n-   If your code produces 144 NAs, then you are on the right track.\n\n-   Note that we are creating copies of the original dataset at each step to facilitate error detection in case any mistakes occur during the process.\n:::\n\n## Your code for Task 4\n\n```{r, echo=TRUE}\nNFLX3 <- NFLX2\n\nNFLX3 <- NFLX3 %>%\n  group_by(YEAR, ANALYS) %>%\n  mutate(accuracy = VALUE - ACTUAL) %>%\n  group_by(ANALYS) %>%\n  arrange(YEAR) %>%\n  mutate(past_accuracy = lag(accuracy))\n\nsum(is.na(NFLX3$past_accuracy))\n\nsum(is.na(NFLX3$past_accuracy)) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 5: Forecast Horizon\n\n-   The longer the forecast horizon, the higher the uncertainty associated with EPS forecasts. To control for this fact, create a new column in **NFLX3** called **horizon** that captures the forecast horizon (ANNDATS_ACT- ANNDATS) for **each analyst**.\n\n-   We anticipate observing a negative correlation between `accuracy` and `horizon`. Typically, as the forecast horizon increases, the accuracy tends to decrease, and vice versa. However, in our dataset, there is an exception where we find a positive correlation between `accuracy` and `horizon` for one specific year. Write an R code to identify and determine which year exhibits this positive correlation.\n\n-   **Need Written Response in this callout:** Enter the year in here.\n\n***The year was 2018 on the month of December 31 to be precise with a correlation value of 0.243.***\n:::\n\n## Your code for Task 5\n\n```{r, echo=TRUE}\n# Your data manipulation code\nNFLX3 <- NFLX3 %>%\n  group_by(ANALYS) %>%\n  arrange(YEAR) %>%\n  mutate(past_accuracy = lag(accuracy, default = NA))  # Correct lag function usage\n\n# Calculate the forecast horizon for each analyst\nNFLX3 <- NFLX3 %>%\n  mutate(horizon = as.numeric(difftime(ANNDATS_ACT, ANNDATS, units = \"days\")))\n\n# Calculate the correlation between accuracy and horizon for each year\ncorrelation_by_year <- NFLX3 %>%\n  group_by(YEAR) %>%\n  summarise(correlation = cor(accuracy, horizon, use = \"complete.obs\"))\n\n# Find the year with a positive correlation\npositive_corr_year <- correlation_by_year %>%\n  filter(correlation > 0)\n\n# Print the year with a positive correlation using kable for formatting\nkable(positive_corr_year, format = \"html\", caption = \"Years with Positive Correlation\")\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Table 6: Experience\n\n-   We assume that if an analyst is monitoring a company for a long period of time, he/she is expected to make more informed predictions. Create a new column in NFLX3 called **experience** that counts the cumulative number of years the analyst monitor (have predictions) the company. Print the summary of experience column.\n\n-   **Hint:** Try to use cumsum() function in R.\n\n-   **Need Written Response in this callout:** Which analyst (s) has the highest number of **experience** in **NFLX3** dataset and for how long do they monitor the NFLX ticker?\n\n***There were two analysts of unique identifier 72088 and 77748 with the highest experience who observed the NTFLX ticker for 17 years each as observed in the graph.***\n:::\n\n## Your code for Task 6\n\n```{r, echo=TRUE}\n# Enter your code for Task 6 below \nNFLX3 <- NFLX3 %>%\n  group_by(ANALYS) %>%\n  mutate(experience = cumsum(!duplicated(YEAR)))\n\nmax_experience <- NFLX3 %>%\n  group_by(ANALYS) %>%\n  summarise(experience = max(experience)) %>%\n  filter(experience == max(experience)) %>%\n  arrange(desc(experience))\n\nexperience_summary <- NFLX3 %>%\n  summarise(\n    Min = min(experience),\n    Max = max(experience),\n    Mean = mean(experience),\n    Median = median(experience),\n    SD = sd(experience)\n  )\n\nexperience_summary %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nmax_experience %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\") %>%\n  row_spec(which(1:nrow(max_experience) %% 2 == 0), background = \"#F2F2F2\") %>%\n  row_spec(which(1:nrow(max_experience) %% 2 != 0), background = \"#D9EAD3\")\n\nggplot(max_experience, aes(x = reorder(ANALYS, -experience), y = experience, fill = experience)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Analyst(s) with Maximum Experience\",\n       x = \"Analyst\",\n       y = \"Experience\") +\n  scale_fill_viridis_c(option = \"magma\", direction = -1) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  guides(fill = guide_colorbar(title = \"Experience\")) \n\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 7: Size\n\n-   If a brokerage house has multiple analysts providing predictions for the same company, it may indicate a greater allocation of resources for company analysis. To capture this, create a new column in the `NFLX3` dataset called `size` that calculates the total count of **unique** analysts employed **per year** by **each** brokerage house (ESTIMATOR)\n\n-   **Need Written Response in this callout:** Print the frequencies for **size** variable. What does this frequency table reveal about the distribution of the number of analysts hired by brokerage houses in this dataset?\n\n***The graph shows a clear trend: as the number of analysts rises, the hiring frequency decreases significantly. A clear indication of hiring trend, in which the brokerage firm higher one analyst per season.***\n:::\n\n## Your code for Task 7\n\n```{r, echo=TRUE}\n# Enter your code for Task 7 below \nNFLX3 <- NFLX3 %>%\n  group_by(YEAR, ESTIMATOR) %>%\n  mutate(size = n_distinct(ANALYS))\n\nsize_freq <- table(NFLX3$size)\n\nsize_table <- as.data.frame(size_freq)\ncolnames(size_table) <- c(\"Number of Analysts\", \"Frequency\")\n\nsize_table <- size_table[order(-size_table$Frequency), ]\n\nsize_table %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nsummary_stats <- summary(NFLX3$size)\n\nsummary_data <- data.frame(\n  Statistic = names(summary_stats),\n  Value = as.character(summary_stats)\n)\n\nsummary_data %>%\n  kable() %>%\n  kable_styling(bootstrap_options = \"striped\")\n\nggplot(size_table, aes(x = factor(`Number of Analysts`), y = Frequency, fill = `Number of Analysts`)) +\n  geom_bar(stat = \"identity\") +\n  ggtitle(\"Number of Unique Analysts per Year and ESTIMATOR\") +\n  xlab(\"Number of Analysts\") +\n  ylab(\"Frequency\") +\n  scale_fill_manual(\n    values = c(\"#1f78b4\", \"#33a02c\", \"#e31a1c\", \"#ff7f00\", \"#6a3d9a\")  # Example colors, feel free to change\n  ) +\n  theme_minimal()\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 8: Prediction 1\n\n-   In the year 2020, NETFLIX reported an actual earnings per share (EPS) of \\$6.08. To predict this EPS value based on historical data, we will employ a linear regression model using the dataset `NFLX3` up until the year 2019. In this model, the target variable will be `ACTUAL` and the predictor variables will include `VALUE` and `past_accuracy`. C.all your model as `model1.`\n\n-   **Need Written Response in this callout:** Using the linear regression model 'model1,' which has been trained on historical data up to the year 2019, what is the forecasted EPS (Earnings Per Share) for the year 2020? Please provide a brief explanation of the method you employed to make this prediction. If you encountered any challenges or were unable to make the calculation, briefly describe the specific issues you encountered.\n\n::: {.callout-important appearance=\"simple\"}\n***When utilizing the linear regression model 'model1', trained on historical data up until 2019, to forecast EPS for 2020, a rigorous evaluation of the model's fit is conducted using the R-squared value. Should this metric surpass the 0.5 threshold, indicating a robust fit, the forecasting process commences. Central to this process is the calculation of the mean of the 'past_accuracy' variable. In instances where the R-squared value meets the prescribed criterion, a new dataset is meticulously curated, ensuring the incorporation of pertinent independent variables. Subsequently, EPS estimates for the future period are meticulously derived through the adept utilization of the 'predict' function.However, in scenarios where the R-squared value fails to meet the specified threshold, a cautionary warning emerges, signaling potential inaccuracies in the subsequent EPS predictions. Addressing specific nuances in data configuration or refining the model's training approach becomes imperative, safeguarding the accuracy and reliability of future EPS projections.***\n:::\n:::\n\n## Your code for Task 8\n\n```{r, echo=TRUE}\nmean_past_accuracy <- mean(NFLX3$past_accuracy, na.rm = TRUE)\n\nmodel1 <- lm(ACTUAL ~ VALUE + past_accuracy, data = NFLX3)\n\n# Get the R-squared value of the model\nr_squared <- summary(model1)$r.squared\n\n# If the R-squared value is high, then we can use the model to generate a forecast\nif (r_squared > 0.5) {\n  new_data_future <- data.frame(\n    VALUE = 6.08, # Replace this with the actual value of VALUE for the future period\n    past_accuracy = mean_past_accuracy\n  )\n\n  predicted_eps_future <- predict(model1, newdata = new_data_future)\n  cat(\"Forecasted EPS for future period: $\", round(predicted_eps_future, 2))\n\n} else {\n\n  cat(\"The R-squared value is low, so the model may not be able to accurately predict future values of the dependent variable.\")\n\n}\n\nkable(round(mean_past_accuracy, 2), col.names = \"Mean past_accuracy\", format = \"html\") %>%\n  kable_styling(bootstrap_options = \"striped\", full_width = FALSE, position = \"center\")\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 9: Prediction 2\n\n-   As an alternative approach, instead of modeling the 'ACTUAL' value, we can obtain the mean and median forecasts for the year 2020 as our best estimates of the EPS value for that year.\n\n-   **Need Written Response in this callout:** Please calculate these forecasts and then compare them with the results from the previous task. Finally, provide your insights and comments based on your findings.\n\n***In this alternative strategy, we have opted to derive our EPS forecasts for 2020 based on two fundamental metrics: the mean and median projections. These straightforward yet essential statistical measures offer valuable insights. The mean forecast, standing at approximately \\$1.24, reflects*** ***a balanced average of our expectations for 2020 EPS. In contrast, the median forecast, notably lower at around \\$0.41, underscores a central tendency amidst the data distribution. When juxtaposed with the model-driven approach expl*****ored earlier, it becomes apparent that the model's complexity might yield a more nuanced and potentially accurate prediction. However, the simplicity of mean and median forecasts should not be underestimated. While lacking the sophistication of a well-fitted model, they provide accessible, *high-level insights. The selection between these methodologies should hinge upon the data's quality and the specific context of the analysis, emphasizing the need for a judicious approach in forecasting decisions.***\n:::\n\n## Your code for Task 9\n\n```{r, echo=TRUE}\nmean_forecast <- mean(NFLX3$VALUE, na.rm = TRUE)\nmedian_forecast <- median(NFLX3$VALUE, na.rm = TRUE)\nforecast_summary <- data.frame(\n  Metric = c(\"Mean forecast for 2020\", \"Median forecast for 2020\"),\n  Value = c(round(mean_forecast, 2), round(median_forecast, 2))\n)\n\nforecast_summary %>%\n  kable(col.names = c(\"Metric\", \"Value\"), align = c(\"l\", \"c\"), caption = \"Forecast Summary for 2020\") %>%\n  kable_styling(bootstrap_options = \"striped\", full_width = FALSE, position = \"center\")\n```\n\n### \n\n::: {.callout-important appearance=\"simple\"}\n## Task 10: Averages\n\n-   Generate a new dataset named `NFLX4` by aggregating data from `NFLX3` Include the variables `size`, `experience`, `horizon`, `accuracy,` `past_accuracy`, and `ACTUAL` in `NFLX4`. When calculating the yearly averages for these variables, ignore any missing values (NAs). Present a summary of the `NFLX4` dataset.\n\n-   **Need Written Response in this callout:** Subsequently, employ correlation analysis or exploratory data analysis to get insights into the relationships between these variables and 'ACTUAL,' if such relationships exist.\n\n***Through in-depth correlation analysis and exploratory data analysis of the NFLX4 data set, significant insights into the relationship between various variables and 'ACTUAL' earnings per share have surfaced. The data uncovers positive correlations between 'ACTUAL' and 'size' (0.18) as well as 'experience' (0.69), suggesting that larger analyst groups and more seasoned analysts tend to provide more accurate forecasts. In contrast, negative correlations with 'horizon' (-0.63) and 'past_accuracy' (-0.80) indicate that analysts with longer forecasting horizons and higher past accuracy might yield less precise predictions for 'ACTUAL' earnings per share. Detailed scatter plots further underscore these trends, including the one highlighting enhanced accuracy with an increasing number of analysts. These findings present invaluable insights for analysts, investors, and financial decision-makers, offering essential perspectives into the factors influencing earnings per share forecasts.***\n:::\n\n```{r, echo=TRUE}\nNFLX4 <- NFLX3 %>%\n  group_by(YEAR) %>%\n  summarise(\n    size = mean(size, na.rm = TRUE),\n    experience = mean(experience, na.rm = TRUE),\n    horizon = mean(horizon, na.rm = TRUE),\n    accuracy = mean(accuracy, na.rm = TRUE),\n    past_accuracy = mean(past_accuracy, na.rm = TRUE),\n    ACTUAL = mean(ACTUAL, na.rm = TRUE)\n  )\n\nsummary(NFLX4)\n\ncorrelation_matrix <- cor(NFLX4[, c(\"size\", \"experience\", \"horizon\", \"accuracy\", \"past_accuracy\", \"ACTUAL\")], use = \"complete.obs\")\n\nprint(correlation_matrix)\n\ncustom_colors <- c(\"#4575b4\", \"#91bfdb\", \"#e0f3f8\", \"#fee090\", \"#fc8d59\", \"#d73027\")\ncorrplot(\n  correlation_matrix,\n  method = \"color\",\n  col = custom_colors,\n  type = \"upper\",\n  tl.cex = 0.7,\n  cl.cex = 0.8,\n  diag = FALSE,\n  number.cex = 0.8\n)\n\nggplot(NFLX4, aes(x = YEAR, y = experience, fill = YEAR)) +\n  geom_boxplot() +\n  ggtitle(\"Experience Distribution Across Years\") +\n  xlab(\"Year\") +\n  ylab(\"Experience\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\nggplot(NFLX4, aes(x = accuracy, fill = YEAR)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Accuracy\") +\n  xlab(\"Accuracy\") +\n  ylab(\"Density\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\nggplot(NFLX4, aes(x = YEAR, y = size, fill = YEAR)) +\n  geom_boxplot() +\n  ggtitle(\"Size Distribution Across Years\") +\n  xlab(\"Year\") +\n  ylab(\"Size\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\nggplot(NFLX4, aes(x = horizon, fill = YEAR)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Horizon\") +\n  xlab(\"Horizon\") +\n  ylab(\"Density\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\nggplot(NFLX4, aes(x = ACTUAL, fill = YEAR)) +\n  geom_histogram(alpha = 0.5, bins = 30) +\n  ggtitle(\"Histogram of ACTUAL\") +\n  xlab(\"ACTUAL\") +\n  ylab(\"Frequency\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  theme_minimal()\n\ncorrelation_data <- data.table::melt(correlation_matrix)\n\nggplot(correlation_data, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile() +\n  scale_fill_gradientn(colors = custom_colors) +\n  ggtitle(\"Correlation Heatmap\") +\n  xlab(\"Variables\") +\n  ylab(\"Variables\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nggplot(NFLX4, aes(x = past_accuracy, y = ACTUAL)) +\n  geom_point(color = \"#41b6c4\", shape = 20, size = 3) +\n  ggtitle(\"ACTUAL vs. past_accuracy\") +\n  xlab(\"past_accuracy\") +\n  ylab(\"ACTUAL\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"github","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":{"light":"lux","dark":["quartz","../../theme_dark_custom.scss"]},"title-block-banner":true,"title":"General R knowledge","date":"03-2-2023","author":"Uday Sashank Kanapala","categories":["code","analysis","visualization","plotly","data anlysis","R"],"image":"b.jpg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}